transform = (pos, scale, angle, vertex -> {
    cosT: cos(rad(angle))
    sinT: sin(rad(angle))
    x: pos.x + cosT * scale.x * vertex.x - sinT * scale.y * vertex.y
    y: pos.y + sinT* scale.x * vertex.x + cosT* scale.y * vertex.y
})

shape = {
    pos: {x:0, y:0}
    scale: {x:1, y:1}
    angle: 0
    globalPos: (p->transform(@pos, @scale, @angle, p))
}

m = (a, b -> {x: (a.x + b.x)*0.5, y: (a.y + b.y)*0.5})

moved = (pos, dx, dy -> {x: pos.x + dx, y: pos.y + dy})

vec2 = (x,y->{x:x,y:y})

rgb = (r, g, b -> {r:r, g:g, b:b})

getParallelotope = (f, df, xmin, xmax ->
    xmid = (xmin + xmax)*0.5
    divnum = 100
    
    amid = 1.0*(f(xmax) - f(xmin)) / (xmax - xmin)
    amin = amid
    amax = amid

    dx = 1.0*(xmax - xmin) / divnum
    for i in 0:divnum do(
        a = df(xmin + i*dx)
        if(a < amin)then(amin = a)
        if(amax < a)then(amax = a)
    )

    xhalf = xmax - xmid

    ymid = f(xmid)
    ywidth = (amax - amin)*xhalf
    ywidth_half = ywidth*0.5
    
    ycenter_left = ymid - xhalf*amid
    ycenter_right = ymid + xhalf*amid

    shape{
        polygon: [
            vec2(xmin, ycenter_left + ywidth_half)
            vec2(xmax, ycenter_right + ywidth_half)
            vec2(xmax, ycenter_right - ywidth_half)
            vec2(xmin, ycenter_left - ywidth_half)
        ]
        ls: [
            {
                line: [vec2(xmid - xhalf, ymid - xhalf*amin), vec2(xmid + xhalf, ymid + xhalf*amin)]
                stroke: rgb(0,255,255)
            }
            {
                line: [vec2(xmid - xhalf, ymid - xhalf*amax), vec2(xmid + xhalf, ymid + xhalf*amax)]
                stroke: rgb(0,255,0)
            }
        ]
    }
)

square = shape{
    polygon: [
        {x: -1, y: -1}, {x: +1, y: -1}, {x: +1, y: +1}, {x: -1, y: +1}
    ]
    topLeft:     (->globalPos( polygon[0] ))
    topRight:    (->globalPos( polygon[1] ))
    bottomRight: (->globalPos( polygon[2] ))
    bottomLeft:  (->globalPos( polygon[3] ))
    top:         (->globalPos( m(polygon[0], polygon[1]) ))
    bottom:      (->globalPos( m(polygon[2], polygon[3]) ))
    left:        (->globalPos( m(polygon[0], polygon[3]) ))
    right:       (->globalPos( m(polygon[1], polygon[2]) ))
}

triangle = shape{
    polygon: [
        {x: 0, y: -0.5773502691896}
        {x: 0.5, y: 0.2886751345948}
        {x: -0.5, y: 0.2886751345948}
    ]
}

hexagon = shape{
    r = 0.5
    polygon: [
        vec2(r*cos(rad(0)),r*sin(rad(0)))
        vec2(r*cos(rad(60)),r*sin(rad(60)))
        vec2(r*cos(rad(120)),r*sin(rad(120)))
        vec2(r*cos(rad(180)),r*sin(rad(180)))
        vec2(r*cos(rad(240)),r*sin(rad(240)))
        vec2(r*cos(rad(300)),r*sin(rad(300)))
    ]
}

route = shape{
    begin = rad(0)
    end = rad(90)
    b: functionPath(sin, begin, end, 100){
        stroke: rgb(255,0,0)
    }
    a: getParallelotope(sin, cos, begin, end){
        fill: rgb(64,64,64)
    }
    scale: {x:200, y:-100}
}
