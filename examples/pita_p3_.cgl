baseColor = Rgb(245, 245, 245)
mainColor = Rgb(49, 187, 222)
accentColor = Rgb(68, 84, 106)

kite = Shape{
    polygon: [
        {x: 0, y: 0}, {x: 15, y: -2.5}, {x: 30, y: 0}, {x: 15, y: +2.5}
    ]
    begin: (->Transform(@pos, @scale, @angle, polygon[0]))
    end:   (->Transform(@pos, @scale, @angle, polygon[2]))
}

skeleton = (num -> Shape{
    ss: []
    for i in 0:num-1 do(
        newKite = kite{pos.x = 100*i}
        ss = ss @ [newKite]
        var(newKite.pos, newKite.angle)
    )
    for i in 0:num-2 do(
        sat( Contact(ss[i].end(), ss[i+1].begin()) )
    )
    begin: (->Transform(@pos, @scale, @angle, ss[0].begin()))
    end:   (->Transform(@pos, @scale, @angle, ss[num-1].end()))
})

main = {
    xmax = 300.0

    rect = Square{scale: Vec2(50, 20), pos: Vec2(0, -50)}
    rectL: rect{sat(left().x == 0), var(pos.x)}
    rectR: rect{sat(right().x == xmax), var(pos.x)}
    
    pole = Square{scale: Vec2(3, 20), fill: mainColor}
    poleL: pole{sat( Contact(Lerp(rectL.top(), rectL.topRight(), 0.7), bottom()) ), var(pos)}
    poleR: pole{sat( Contact(Lerp(rectR.top(), rectR.topLeft(), 0.7), bottom()) ), var(pos)}

    rail: Shape{
        polygon: [poleL.top(), poleR.top(), Moved(poleR.top(), 0, 1), Moved(poleL.top(), 0, 1)]
        fill: mainColor
        stroke_width: 0
        center: (->globalPos(Mid(polygon[0], polygon[1])))
    }

    sinPath = FunctionPath(Sin, 0, 1440, 500){ scale: Vec2(xmax/1440.0, 10) }
    ocean: Shape{
        polygon: sinPath.line @ [Vec2(1440, 5), Vec2(0, 5)]
        scale: sinPath.scale
        fill: mainColor
    }

    bridgeL: skeleton(4){ pos: Sub(rectL.topRight(), begin()) }
    bridgeR: skeleton(3){ pos: Sub(rectR.topLeft(), end()) }

    sat( Contact(bridgeL.begin(), rectL.topRight()) )
    sat( Distance({a:Triangle{}, p: @bridgeL, pos: p.end()}, rail) == 0.0 )
    sat( Distance({a:Triangle{}, p: @bridgeR, pos: p.begin()}, rail) == 0.0 )
    sat( Contact(bridgeR.end(), rectR.topLeft()) )
    sat( Contact(bridgeL.end(), bridgeR.begin()) )
    
    for i in 0:Size(bridgeL.ss)-2 do( sat( Contact(bridgeL.ss[i].end(), bridgeL.ss[i+1].begin()) ) )
    for i in 0:Size(bridgeR.ss)-2 do( sat( Contact(bridgeR.ss[i].end(), bridgeR.ss[i+1].begin()) ) )

    var(bridgeL.ss[*].angle, bridgeL.ss[*].pos)
    var(bridgeR.ss[*].angle, bridgeR.ss[*].pos)
    
    fill: baseColor
    stroke: mainColor
    stroke_width: 0.5
}
