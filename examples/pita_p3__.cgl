import "common.cgl"

baseColor = rgb(245, 245, 245)
mainColor = rgb(49, 187, 222)
accentColor = rgb(68, 84, 106)

kite = shape{
    polygon: [
        {x: 0, y: 0}, {x: 15, y: -2.5}, {x: 30, y: 0}, {x: 15, y: +2.5}
    ]
    begin: (->transform(@pos, @scale, @angle, polygon[0]))
    end:   (->transform(@pos, @scale, @angle, polygon[2]))
}

skeleton = (num -> shape{
    ss: []
    for i in 0:num-1 do(
        newKite = kite{pos.x = 100*i}
        ss = ss @ [newKite]
        var(newKite.pos, newKite.angle)
    )
    for i in 0:num-2 do(
        sat( contact(ss[i].end(), ss[i+1].begin()) )
    )
    begin: (->transform(@pos, @scale, @angle, ss[0].begin()))
    end:   (->transform(@pos, @scale, @angle, ss[num-1].end()))
    center:   (->transform(@pos, @scale, @angle, ss[3].end()))
})

main = {
    xmax = 300.0

    rect = square{scale: vec2(50, 20), pos: vec2(0, -50)}
    rectL: rect{sat(left().x == 0), var(pos.x)}
    rectR: rect{sat(right().x == xmax), var(pos.x)}
    
    pole = square{scale: vec2(3, 20), fill: mainColor}
    poleL: pole{sat( contact(lerp(rectL.top(), rectL.topRight(), 0.7), bottom()) ), var(pos)}
    poleR: pole{sat( contact(lerp(rectR.top(), rectR.topLeft(), 0.7), bottom()) ), var(pos)}

    rail: shape{
        polygon: [poleL.top(), poleR.top(), moved(poleR.top(), 0, 1), moved(poleL.top(), 0, 1)]
        fill: mainColor
        stroke_width: 0
        center: (->globalPos(mid(polygon[0], polygon[1])))
    }

    sinPath = FunctionPath(Sin, 0, 1440, 500){ scale: vec2(xmax/1440.0, 10) }
    ocean: shape{
        polygon: sinPath.line @ [vec2(1440, 5), vec2(0, 5)]
        scale: sinPath.scale
        fill: mainColor
    }

    bridge: skeleton(7){
        pos: vec2(xmax*0.5 - (end().x + begin().x)*0.5, 0)
        sat( contact(begin(), rectL.topRight()) )
        sat( contact(end(), rectR.topLeft()) )
        sat( p: @ss[3], Distance({a:triangle, pos: center()}, rail) == 0.0 )        
    }
    
    fill: baseColor
    stroke: mainColor
    stroke_width: 0.5
}