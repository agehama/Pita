transform = (pos, scale, angle, vertex -> {
    cosT:cos(angle)
    sinT:sin(angle)
    x:pos.x + cosT * scale.x * vertex.x - sinT * scale.y * vertex.y
    y:pos.y + sinT* scale.x * vertex.x + cosT* scale.y * vertex.y
})

shape = {
    pos: {x:0, y:0}
    scale: {x:1, y:1}
    angle: 0
}

contact = (p, q -> (p.x - q.x)*(p.x - q.x) < 1  & (p.y - q.y)*(p.y - q.y) < 1)

distant = (p, q, dist -> (p.x - q.x)*(p.x - q.x) + (p.y - q.y)*(p.y - q.y) == dist*dist)

kite = shape{
	vertex: [
		{x: 0, y: 0}, {x: 20, y: -20}, {x: 80, y: 0}, {x: 20, y: +20}
	]
	begin: (->transform(pos, scale, angle, vertex[0]))
	end:   (->transform(pos, scale, angle, vertex[2]))
}

skeleton = {
	ss: [0, 1, 2, 3]
	for i in 0:3 do(
		ss[i] = kite{pos.x = 100*i}
		var(ss[i].pos, ss[i].angle)
	)
	for i in 0:2 do(
		sat( p = ss[i].begin(), contact(ss[i].end(), ss[i+1].begin()) )
	)

	sat(contact(ss[0].begin(), {x: 30, y:200}))
	sat(contact(ss[3].end(), {x: 250, y:200}))
}